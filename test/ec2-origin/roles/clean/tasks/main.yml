---
- name: Gather all the VPC facts # using ec2_vpc_facts.py until switching to ec2_vpc_net_facts in ansible 2.1+ 
  ec2_vpc_facts:
    region: "{{ aws_region }}"
    resource_tags:
      "Name": "{{ aws_vpc_name }}{{ cluster_job }}"

- name: Instance id list
  set_fact:
    hosts: "{{ groups['all'] | difference(['localhost']) }}"
- set_fact:
    instance_ids: "{% set x = [] %}{% for host in hosts %}{% set _ = x.append(hostvars[host]['id']) %}{% endfor %}{{ x }}"

- name: Get EC2 volumes list for cluster
  ec2_vol:
    instance: "{{ item }}"
    state: list
    region: "{{ aws_region }}"
  with_items: instance_ids
  register: volume_list

- set_fact:
    volume_ids: "{% set x = [] %}{% for item in volume_list.results %}{% for vol in item.volumes %}{% if vol['attachment_set']['device'] == '/dev/sda1' %}{% set _ = x.append(vol.id) %}{% endif %}{% endfor %}{% endfor %}{{ x }}"

- name: Delete virtual machines
  ec2:
    state: absent
    region: "{{ aws_region }}"
    instance_ids: "{{ hostvars[item].id }}"
    wait: yes
  with_items: "{{ hosts }}"

- name: Delete volumes
  ec2_vol:
    region: "{{ aws_region }}"
    id: "{{ item }}"
    state: absent
  with_items: volume_ids
  ignore_errors: true
  
- name: Delete the VPC and its dependencies
  ec2_vpc_delete:
    region: "{{ aws_region }}"
    resource_tags:
      "Name": "{{ aws_vpc_name }}{{ cluster_job }}"
      
- name: Removing generated local cluster.status definition file
  command: rm cluster.status{{ cluster_job }}
    
- name: Removing generated local inventory.cluster definition file
  command: rm inventory.cluster{{ cluster_job }}
    
- name: Removing generated local squid.conf definition file
  command: rm roles/workspace/files/squid.conf{{ cluster_job }}
        
        